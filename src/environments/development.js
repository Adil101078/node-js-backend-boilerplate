const APP_PORT = parseInt(process.env.DEV_PORT)
const DOMAIN_NAME = process.env.DOMAIN_NAME ?? 'localhost'
const HTTP_PROTOCOL = process.env.HTTP_PROTOCOL ?? 'http'

export default () => ({
	PORT: APP_PORT,
	HOST:
		process.env.HOST ??
		`${HTTP_PROTOCOL}://${DOMAIN_NAME}${APP_PORT == 80 ? '' : `:${APP_PORT}`}`,
	ENVIRONMENT: 'development',

	DB_CONNECTION_STRING: process.env.DEV_DB_CONNECTION_STRING,
	ITEMS_PER_PAGE: Number(process.env.ITEMS_PER_PAGE) || 10,

	OTP_EXPIRES_IN: parseInt(process.env.OTP_EXPIRES_IN),

	JWT_SECRET: process.env.JWT_SECRET,
	JWT_EXPIRY: process.env.JWT_EXPIRY,

	DB_CONNECTION_OPTIONS: {
		useNewUrlParser: true,
		useUnifiedTopology: true,
	},
	AWS: {
		SNS_REGION: process.env.SNS_REGION,
		SNS_ACCESS_KEY_ID: process.env.SNS_ACCESS_KEY_ID,
		SNS_SECRET_ACCESS_KEY: process.env.SNS_SECRET_ACCESS_KEY,
		SES_EMAIL_ID: process.env.SES_EMAIL_ID
	},
	SUPPORT_EMAIL: process.env.SUPPORT_EMAIL || 'isnitch@support.com',
	BRAND_NAME: process.env.BRAND_NAME || 'iSnitch',
	CODE_VERIFICATION: {
		LINK_TOKEN_LENGTH: +process.env.CODE_VERIFICATION_LINK_TOKEN_LENGTH || 50,

		EXPIRATION_TIME: +process.env.CODE_VERIFICATION_EXPIRATION_TIME, // in minutes
		EXPIRATION_TIME_UNIT: process.env.CODE_VERIFICATION_EXPIRATION_TIME_UNIT,

		EXPIRATION_TIME_FOR_PASSED_CODE:
			+process.env.CODE_VERIFICATION_EXPIRATION_TIME_FOR_PASSED_CODE, // in minutes
		EXPIRATION_TIME_FOR_PASSED_CODE_UNIT:
			process.env.CODE_VERIFICATION_EXPIRATION_TIME_FOR_PASSED_CODE_UNIT,

		RESEND_DURATION: JSON.parse(process.env.CODE_VERIFICATION_RESEND_DURATION), // array of seconds [30, 40, 60 ...]
		RESEND_DURATION_UNIT: process.env.CODE_VERIFICATION_RESEND_DURATION_UNIT,

		RESEND_LIMIT_IN_SESSION: +process.env.CODE_VERIFICATION_RESEND_LIMIT_IN_SESSION,

		RESEND_SESSION_DURATION: +process.env.CODE_VERIFICATION_RESEND_SESSION_DURATION, // in minutes
		RESEND_SESSION_DURATION_UNIT:
			process.env.CODE_VERIFICATION_RESEND_SESSION_DURATION_UNIT,
	},
	SIGNIN: {
		INVALID_SIGNIN_ATTEMPTS_LIMIT: +process.env.SIGNIN_INVALID_ATTEMPTS_LIMIT,

		MULTIPLE_SIGNIN_ATTEMPTS_BLOCK_DURATION:
			+process.env.SIGNIN_MULTIPLE_ATTEMPTS_BLOCK_DURATION, // in hours
		MULTIPLE_SIGNIN_ATTEMPTS_BLOCK_DURATION_UNIT:
			process.env.SIGNIN_MULTIPLE_ATTEMPTS_BLOCK_DURATION_UNIT,
	},
})
